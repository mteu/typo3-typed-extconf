{
	"name": "mteu/typo3-typed-extconf",
	"description": "Aims to provide a type-safe extension configuration management for TYPO3, ensuring proper types instead of string-only values from backend configuration or mixed types from config/system/settings.php",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"authors": [
		{
			"name": "Martin Adler",
			"email": "mteu@mailbox.org",
			"role": "Maintainer"
		},
		{
			"name": "Elias Häußler",
			"email": "elias@haeussler.dev"
		}
	],
	"require": {
		"php": "~8.2.0 || ~8.3.0 || ~8.4.0",
		"ext-filter": "*",
		"cuyz/valinor": "^2.0",
		"nette/php-generator": "^4.1.6",
		"symfony/console": "^8.0",
		"typo3/cms-core": "~12.4.37 || ~13.4.18"
	},
	"require-dev": {
		"composer/class-map-generator": "^1.1",
		"eliashaeussler/phpunit-attributes": "^1.7",
		"eliashaeussler/version-bumper": "^3.0",
		"phpunit/phpcov": "^10.0 || ^11.0.0",
		"phpunit/phpunit": "^11.5 || ^12.1",
		"roave/security-advisories": "dev-latest",
		"symfony/dependency-injection": "^7.4",
		"typo3/testing-framework": "^8.2 || ^9.2"
	},
	"autoload": {
		"psr-4": {
			"mteu\\TypedExtConf\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"mteu\\TypedExtConf\\Tests\\": "Tests/"
		}
	},
	"config": {
		"allow-plugins": {
			"eliashaeussler/version-bumper": true,
			"ergebnis/composer-normalize": true,
			"phpstan/extension-installer": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"lock": true,
		"sort-packages": true,
		"vendor-dir": ".build/vendor"
	},
	"extra": {
		"typo3/cms": {
			"extension-key": "typed_extconf",
			"skip-ter-packagist-import": true,
			"web-dir": ".build/web"
		}
	},
	"scripts": {
		"post-install-cmd": [
			"@cgl install"
		],
		"cgl": "@composer -d Tests/CGL --",
		"fix": "@cgl fix",
		"lint": "@cgl lint",
		"sca": "@cgl sca",
		"test": [
			"@test:functional",
			"@test:unit"
		],
		"test:coverage": [
			"@test:coverage:functional",
			"@test:coverage:unit",
			"@test:coverage:merge"
		],
		"test:coverage:functional": "phpunit -c phpunit.functional.xml",
		"test:coverage:merge": "phpcov merge --html .build/coverage/merged_html --clover .build/coverage/clover.xml --text php://stdout .build/coverage/php ",
		"test:coverage:unit": "phpunit -c phpunit.unit.xml",
		"test:functional": "@test:coverage:functional --no-coverage",
		"test:unit": "@test:coverage:unit --no-coverage"
	}
}
